7A)IF 32BIT FOUND DISP FFFFFFF IN R0

AREA DATA1, DATA, READONLY  
ARRY DCD 0X08F, 0X012, 0X55, 0X03, 0X088  
AREA DATA2, DATA, READONLY  
KEY DCD 0X088  
LEN EQU 05  
AREA PROGRAM, CODE, READONLY  
ENTRY  
EXPORT START  
START  
LDR R0,=ARRY  
LDR R2,=LEN  
LDR R3,=KEY  
LDR R4,[R3]  
LOOP  
LDR R5,[R0]  
CMP R4,R5  
BEQ FOUND  
ADD R0,R0,#4  
SUBS R2,R2,#0X1  
BNE LOOP  
MOV R0,#0  
B STOP  
FOUND MOV R0,#0XFFFFFFFF  
STOP B STOP  
END  

7B)LARGEST/SMALLEST FROM ARR OF 5 NUM

	AREA SRC, DATA, READONLY  
	DCD 0x0000008F, 0x00000012, 0x00000024, 0x00000023, 0x00000011  
	ALIGN  
	AREA DST, DATA, READWRITE  
	SPACE 02  
LEN EQU 05  
	AREA PROGRAM, CODE, READONLY  
ENTRY  
	EXPORT START  
START  
	LDR R6,=LEN  
	LDR R0,=SRC  
	SUB R6,R6,#01  
	LDR R7,[R0],#04  
TOP  
	LDR R8,[R0],#04  
	CMP R8, R7  
	MOVGE R7, R8  
	SUB R6, R6,#1  
	CMP R6, #00  
	BNE TOP  
	LDR R0,=DST  
	STR R7,[R0]  
STOP B STOP  
	END 

7C)LARGEST/SMALLEST IN GIVEN ARR

	AREA LIST, DATA, READONLY  
	DCD 0x0000008F, 0x00000012, 0x00000024, 0x00000023, 0x00000011  
	ALIGN  
	AREA DST, DATA, READWRITE  
	SPACE 10  
LEN EQU 05  
	AREA PROGRAM, CODE, READONLY  
ENTRY  
	EXPORT START  
START LDR R0,=LEN  
	LDR R5,=LIST  
	LDR R6,=DST  
UP LDR R1,[R5]  
	STR R1,[R6]  
	ADD R5,#04  
	ADD R6,#04  
	SUB R0,#1  
	CMP R0,#00  
	BNE UP  
	LDR R0,=LEN  
TOP2 LDR R6,=DST 
	LDR R1,=LEN  
	SUB R1,#1  
TOP LDR R2,[R6]  
	ADD R6,#4  
	LDR R3,[R6]  
	CMP R2,R3 ;  
	BLE DN  
	STR R2,[R6]  
	SUB R6,#4  
	STR R3,[R6]  
	ADD R6,#4  
DN SUB R1,#01  
	CMP R1,#00  
	BLE DN1  
	B TOP  
DN1 SUB R0,#1  
	CMP R0, #00  
	BLE DN2  
	B TOP2  
DN2 B DN2  
	END 